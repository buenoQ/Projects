import sys

MENU = {
    "espresso": {
        "ingredients": {
            "water": 50,
            "coffee": 18,
        },
        "cost": 1.5,
    },
    "latte": {
        "ingredients": {
            "water": 200,
            "milk": 150,
            "coffee": 24,
        },
        "cost": 2.5,
    },
    "cappuccino": {
        "ingredients": {
            "water": 250,
            "milk": 100,
            "coffee": 24,
        },
        "cost": 3.0,
    }
}

resources = {
    "water": 300,
    "milk": 200,
    "coffee": 100,
    "money": 0
}


def player_option():
    option = input("What would you like? (espresso/latte/cappuccino): ")
    return option


# For maintainers of the coffee machine, they can use “off” as the secret word to turn off the machine. Your code
# should end execution when this happens.
def turn_off():
    sys.exit()


# gives report of resources that are available
def report():
    print(f"Water: {resources['water']}ml ")
    print(f"Milk: {resources['milk']}ml")
    print(f"Coffee: {resources['coffee']}g")
    print(f"Money: ${resources['money']}")


# checks if there is enough resources to make drink
def resources_sufficient(option):
    check = True
    for i in range(len(MENU[option]['ingredients'])):
        key = list(MENU[option]['ingredients'])[i]
        if MENU[option]['ingredients'][key] > resources[key]:
            print(f"Sorry there is not enough {key}.")
            check = False

    return check


# processes the coins
def process_coins():
    print("Please insert coins.")
    quarters = int(input("How many quarters?: "))
    dimes = int(input("How many dimes?: "))
    nickles = int(input("How many nickles?: "))
    pennies = int(input("How many pennies?: "))
    total = (quarters * 0.25) + (dimes * 0.10) + (nickles * 0.05) + (pennies * 0.01)

    if total < MENU[choice]['cost']:
        print("Sorry that's not enough money. Money refunded.")
        return False
    elif total > MENU[choice]['cost']:
        print(f"Here is ${total - MENU[choice]['cost']} in change.")
    return True


# deducts the resources from the machine
def deduct_resources(option):
    for i in range(len(MENU[option]['ingredients'])):
        key = list(MENU[option]['ingredients'])[i]
        resources[key] -= MENU[option]['ingredients'][key]

    resources["money"] += MENU[option]['cost']
    print(f"Here is your {option}. enjoy!")


# runs the program
while True:
    choice = player_option()
    if choice == "report":
        report()
    elif choice == "off":
        turn_off()
    else:
        # checks if both conditions are true
        if resources_sufficient(choice) and process_coins():
            deduct_resources(choice)
